<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dev-tools on Chris LaBarge - Software Developer - Portfolio</title>
    <link>https://chrislabarge.com/categories/dev-tools/</link>
    <description>Recent content in dev-tools on Chris LaBarge - Software Developer - Portfolio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 05 Feb 2021 18:30:21 -0500</lastBuildDate>
    
	<atom:link href="https://chrislabarge.com/categories/dev-tools/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Port Forward Postgres Docker Container to Localhost</title>
      <link>https://chrislabarge.com/posts/docker-postgres/</link>
      <pubDate>Fri, 05 Feb 2021 18:30:21 -0500</pubDate>
      
      <guid>https://chrislabarge.com/posts/docker-postgres/</guid>
      <description>&lt;h2 id=&#34;tools---install-the-following&#34;&gt;Tools - &lt;em&gt;Install the following&lt;/em&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; - A platform to run isolated software packages called containers.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/postgres&#34;&gt;Docker Postgres Image&lt;/a&gt; - The instructions for building a postgres container. A container is an instance of a docker image.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;p&gt;I recently
&lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-remove-docker-images-containers-and-volumes&#34;&gt;pruned&lt;/a&gt;
my docker containers and images to free up some space on my local drive. In
doing so, I was required to spin up some of the containers that I rely on for
local development.&lt;/p&gt;
&lt;p&gt;One of these containers is a instance of &lt;a href=&#34;https://hub.docker.com/_/postgres&#34;&gt;postgres&lt;/a&gt; docker
image. I prefer using a docker container of this image in replace of local postgres installations, as
it is much less of a headache.&lt;/p&gt;
&lt;p&gt;I also like to treat the postgres database in the container as if it were installed
locally by forwarding the container port to localhost.&lt;/p&gt;
&lt;p&gt;I find this helps limit configuration issues when working on new projects.
Now all I will have worry about is my database &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;command&#34;&gt;Command&lt;/h2&gt;
&lt;h4 class=&#34;snippet-heading&#34; id=&#34;terminal-&#34;&gt;terminal&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker run --name localhost-postgres -p 5432:5432 -e &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;POSTGRES_USER&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;some_user &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;POSTGRES_PASSWORD&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;some_password -d postgres
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This entire command is not specific to &lt;code&gt;postgres&lt;/code&gt;.  You run commands like this using most one off docker images.
Lets break this command down.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker run&lt;/code&gt; Run a command in a new container&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--name&lt;/code&gt; the custom name of the container ( I prefer to prefix it with &lt;code&gt;localhost&lt;/code&gt; in case I have other postgres docker containers, NOT binded to localhost)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt; Run container in background and print container ID&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e&lt;/code&gt; Set environment variables&lt;/li&gt;
&lt;li&gt;&lt;code&gt;POSTGRES_USER=&lt;/code&gt; fill this value with &lt;code&gt;username&lt;/code&gt; for your projects database configuration/secret files. (do not include the ENV variable in the command if you prefer to use default &lt;code&gt;postgres&lt;/code&gt; as your username)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;POSTGRES_PASSWORD=&lt;/code&gt; fill this value with the &lt;code&gt;password&lt;/code&gt; for your projects database configuration/secret files. (this ENV variable is required for the container)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt; Publish a container&amp;rsquo;s port(s) to the host&lt;/li&gt;
&lt;li&gt;&lt;code&gt;5432:5432&lt;/code&gt; The default container postgres port mapped (fowarded) to the default localhost postgres port &lt;a href=&#34;https://www.adminsub.net/tcp-udp-port-finder/5432&#34;&gt;5432&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;postgres&lt;/code&gt; The installed postgres docker image you are using for the container&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;using&#34;&gt;Using&lt;/h2&gt;
&lt;p&gt;Now all you have to do is is use the value for &lt;code&gt;POSTGRES_USER=&lt;/code&gt; as your database &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;POSTGRES_PASSWORD=&lt;/code&gt; as your database &lt;code&gt;password&lt;/code&gt;.&lt;/p&gt;
&lt;h4 class=&#34;snippet-heading&#34; id=&#34;rails_projectenv-&#34;&gt;rails_project/.env&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;DB_USER=some_user
DB_PASSWORD=some_password
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And that is typically all I need to get up an running on a new project and run a command such as &lt;code&gt;rake db:setup&lt;/code&gt;
This is how a typical database configuration file looks in rails:&lt;/p&gt;
&lt;h4 class=&#34;snippet-heading&#34; id=&#34;rails_projectconfigdatabaseyml-&#34;&gt;rails_project/config/database.yml&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;production&lt;/span&gt;:
  &lt;span style=&#34;color:#ff79c6&#34;&gt;url&lt;/span&gt;:  &amp;lt;%= ENV[&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;DATABASE_URL&amp;#34;&lt;/span&gt;] %&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;  pool: &amp;lt;%= ENV[&amp;#34;DB_POOL&amp;#34;] || ENV[&amp;#39;RAILS_MAX_THREADS&amp;#39;] || 5 %&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color:#ff79c6&#34;&gt;development&lt;/span&gt;:
  &lt;span style=&#34;color:#ff79c6&#34;&gt;pool&lt;/span&gt;: &amp;lt;%= ENV.fetch(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;RAILS_MAX_THREADS&amp;#34;&lt;/span&gt;) { &lt;span style=&#34;color:#bd93f9&#34;&gt;5&lt;/span&gt; } %&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;  adapter: postgresql&lt;/span&gt;
  &lt;span style=&#34;color:#ff79c6&#34;&gt;encoding&lt;/span&gt;: unicode
  &lt;span style=&#34;color:#ff79c6&#34;&gt;database&lt;/span&gt;: rails_project
  &lt;span style=&#34;color:#ff79c6&#34;&gt;host&lt;/span&gt;: localhost
  &lt;span style=&#34;color:#ff79c6&#34;&gt;username&lt;/span&gt;: &amp;lt;%= ENV[&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;DB_USER&amp;#39;&lt;/span&gt;] %&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;  password: &amp;lt;%= ENV[&amp;#39;DB_PASSWORD&amp;#39;] %&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color:#ff79c6&#34;&gt;test&lt;/span&gt;:
  &lt;span style=&#34;color:#ff79c6&#34;&gt;pool&lt;/span&gt;: &amp;lt;%= ENV.fetch(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;RAILS_MAX_THREADS&amp;#34;&lt;/span&gt;) { &lt;span style=&#34;color:#bd93f9&#34;&gt;5&lt;/span&gt; } %&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;  adapter: postgresql&lt;/span&gt;
  &lt;span style=&#34;color:#ff79c6&#34;&gt;encoding&lt;/span&gt;: unicode
  &lt;span style=&#34;color:#ff79c6&#34;&gt;database&lt;/span&gt;: rails_project_test
  &lt;span style=&#34;color:#ff79c6&#34;&gt;host&lt;/span&gt;: localhost
  &lt;span style=&#34;color:#ff79c6&#34;&gt;username&lt;/span&gt;: &amp;lt;%= ENV[&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;DB_USER&amp;#39;&lt;/span&gt;] %&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;  password: &amp;lt;%= ENV[&amp;#39;DB_PASSWORD&amp;#39;] %&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Bold &#43; Italic Font in TMUX</title>
      <link>https://chrislabarge.com/posts/bold-italic-tmux/</link>
      <pubDate>Sat, 28 Mar 2020 18:30:21 -0500</pubDate>
      
      <guid>https://chrislabarge.com/posts/bold-italic-tmux/</guid>
      <description>&lt;p&gt;You have just installed a hip new font face for programming. It has the all of the bells and whistles including &lt;strong&gt;bold&lt;/strong&gt; and &lt;em&gt;italic&lt;/em&gt; font styles. ðŸ¤™&lt;/p&gt;
&lt;p&gt;You configure your terminal to use the new font, and start typing away.&lt;/p&gt;
&lt;p&gt;&amp;hellip;.&lt;strong&gt;WHAT???&lt;/strong&gt;&amp;hellip;.Its not working&amp;hellip;.ðŸ™„&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Has this happened to you before?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There is always some caveat when tweaking your work environment no matter how trivial.&lt;/p&gt;
&lt;p&gt;This guide will briefly outline the solutions I came across to get &lt;strong&gt;bold&lt;/strong&gt; and
&lt;em&gt;italic&lt;/em&gt; font styles working Vim/NeoVim running within a TMUX session, from a
GNOME terminal shell.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://neovim.io/&#34;&gt;VIM/NeoVIM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tmux/tmux&#34;&gt;TMUX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/GNOME_Terminal&#34;&gt;GNOME Terminal&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;the-problem&#34;&gt;The Problem&lt;/h2&gt;
&lt;p&gt;The &lt;strong&gt;bold&lt;/strong&gt; and &lt;em&gt;italic&lt;/em&gt; font faces were not properly working in a Tmux
session. But they &lt;strong&gt;were&lt;/strong&gt; working outside of Tmux in a gnome terminal.&lt;/p&gt;
&lt;p&gt;I came across this
&lt;a href=&#34;https://gist.github.com/gutoyr/4192af1aced7a1b555df06bd3781a722&#34;&gt;Tutorial&lt;/a&gt; and
it got me close to a solution. But there were issues.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Step 3 in the
&lt;a href=&#34;https://gist.github.com/gutoyr/4192af1aced7a1b555df06bd3781a722&#34;&gt;tutorial&lt;/a&gt;
did not work for me, so I had to rely on exporting the TERM env variable
previous to running &lt;code&gt;tmux&lt;/code&gt; command. (&lt;em&gt;Per the instructions&lt;/em&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;env &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;TERM&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;screen-256color tmux&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;This worked for me. The &lt;code&gt;bold&lt;/code&gt; and &lt;code&gt;italic&lt;/code&gt; fonts are now working within Tmux.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add this to the &lt;code&gt;.zhrc&lt;/code&gt; configuration file to make an alias to prevent from
having to explicitly set the &lt;code&gt;TERM&lt;/code&gt; environment variable.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 class=&#34;snippet-heading&#34; id=&#34;zhrc-&#34;&gt;~/.zhrc&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;alias&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;tmux&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;env TERM=screen-256color tmux&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;cursor-issues&#34;&gt;Cursor Issues&lt;/h2&gt;
&lt;p&gt;In Vim and NeoVim I have the options to allow for &lt;code&gt;block&lt;/code&gt; cursor shape when in
&lt;code&gt;normal&lt;/code&gt; mode and &lt;code&gt;line&lt;/code&gt; shape when in &lt;code&gt;insert&lt;/code&gt; mode.&lt;/p&gt;
&lt;h4 class=&#34;snippet-heading&#34; id=&#34;confignviminitvim-&#34;&gt;~/.config/nvim/init.vim&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &amp;amp;term =~ &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;screen.&amp;#34;&lt;/span&gt;
   &lt;span style=&#34;color:#ff79c6&#34;&gt;let&lt;/span&gt; &amp;amp;t_ti.=&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;\eP\e[1 q\e\\&amp;#34;&lt;/span&gt;
   &lt;span style=&#34;color:#ff79c6&#34;&gt;let&lt;/span&gt; &amp;amp;t_SI.=&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;\eP\e[5 q\e\\&amp;#34;&lt;/span&gt;
   &lt;span style=&#34;color:#ff79c6&#34;&gt;let&lt;/span&gt; &amp;amp;t_EI.=&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;\eP\e[1 q\e\\&amp;#34;&lt;/span&gt;
   &lt;span style=&#34;color:#ff79c6&#34;&gt;let&lt;/span&gt; &amp;amp;t_te.=&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;\eP\e[0 q\e\\&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt;
   &lt;span style=&#34;color:#ff79c6&#34;&gt;let&lt;/span&gt; &amp;amp;t_ti.=&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;\&amp;lt;Esc&amp;gt;[1 q&amp;#34;&lt;/span&gt;
   &lt;span style=&#34;color:#ff79c6&#34;&gt;let&lt;/span&gt; &amp;amp;t_SI.=&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;\&amp;lt;Esc&amp;gt;[5 q&amp;#34;&lt;/span&gt;
   &lt;span style=&#34;color:#ff79c6&#34;&gt;let&lt;/span&gt; &amp;amp;t_EI.=&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;\&amp;lt;Esc&amp;gt;[1 q&amp;#34;&lt;/span&gt;
   &lt;span style=&#34;color:#ff79c6&#34;&gt;let&lt;/span&gt; &amp;amp;t_te.=&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;\&amp;lt;Esc&amp;gt;[0 q&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;endif&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;This code is for displaying the desired cursor dependent on being in a remote
session or not.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Unfortunately the font solution broke the cursor shape for Vim, running in
Tmux.   The fix from above was only showing the &lt;code&gt;line&lt;/code&gt; shape cursor.&lt;/p&gt;
&lt;p&gt;I found this solution from a neovim &lt;a href=&#34;https://neovim.io/doc/user/term.html#tui-cursor-shape&#34;&gt; document &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Which instructed me to add an override to &lt;code&gt;~/.tmux.conf&lt;/code&gt; file&lt;/p&gt;
&lt;h4 class=&#34;snippet-heading&#34; id=&#34;tmuxconf-&#34;&gt;~/.tmux.conf&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;set&lt;/span&gt; -ga terminal-overrides &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;*:Ss=\E[%p1%d q:Se=\E[ q&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>How to use Rails Active Record Relation method #delete_all</title>
      <link>https://chrislabarge.com/posts/delete-all/</link>
      <pubDate>Wed, 23 May 2018 18:30:21 -0500</pubDate>
      
      <guid>https://chrislabarge.com/posts/delete-all/</guid>
      <description>&lt;h2 id=&#34;what-you-will-learn&#34;&gt;What You Will Learn&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;How to use &lt;a href=&#34;https://apidock.com/rails/v6.0.0/ActiveRecord/Relation/delete_all&#34;&gt; ActiveRecord::Relation#delete_all &lt;/a&gt; - A fast way to delete a large batch of rows from a Database table&lt;/li&gt;
&lt;li&gt;How to use &lt;a href=&#34;http://api.rubyonrails.org/classes/ActiveRecord/Batches.html#method-i-in_batches&#34;&gt; ActiveRecord::Batches::BatchEnumerator#in_batches &lt;/a&gt; - To prevent from locking your Database&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;who-this-is-for&#34;&gt;Who This Is For&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Ruby on Rails developers who need to delete records more efficiently.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;requirements&#34;&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rails/rails&#34;&gt;Ruby on Rails&lt;/a&gt; &amp;gt;= 5.0&lt;/li&gt;
&lt;li&gt;Relational Database like &lt;a href=&#34;https://www.mysql.com/&#34;&gt;MySQL&lt;/a&gt; or &lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;I am currently working on a Rails project that deals with importing and
exporting large amounts of data from excel sheets.  The user is able to import
and save the data into the application&amp;rsquo;s Database and also delete the data.&lt;/p&gt;
&lt;p&gt;Because some of these deletions can consist of hundreds of thousands of rows, the
removal feature must be developed a little differently.&lt;/p&gt;
&lt;h2 id=&#34;setup&#34;&gt;Setup&lt;/h2&gt;
&lt;p&gt;When a User imports/uploads new data into the application, a&lt;code&gt;DataUpload&lt;/code&gt; record
is created, along with a new &lt;code&gt;DataSet&lt;/code&gt; record, for every single row from the
imported exec sheet.&lt;/p&gt;
&lt;p&gt;The model &lt;code&gt;DataSet&lt;/code&gt; has a &lt;code&gt;belongs_to&lt;/code&gt; relationship to &lt;code&gt;DataUpload&lt;/code&gt;.&lt;/p&gt;
&lt;h4 class=&#34;snippet-heading&#34; id=&#34;appmodelsdata_setrb-&#34;&gt;app/models/data_set.rb&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;DataSet&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt; ApplicationRecord
  belongs_to &lt;span style=&#34;color:#f1fa8c&#34;&gt;:data_uploads&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The model &lt;code&gt;DataUpload&lt;/code&gt; has a &lt;code&gt;has_many&lt;/code&gt; relationship to &lt;code&gt;DataSet&lt;/code&gt;.&lt;/p&gt;
&lt;h4 class=&#34;snippet-heading&#34; id=&#34;appmodelsdata_uploadrb-&#34;&gt;app/models/data_upload.rb&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;DataUpload&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt; ApplicationRecord
  has_many &lt;span style=&#34;color:#f1fa8c&#34;&gt;:data_sets&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;dependent&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;:destroy&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice the &lt;code&gt;dependent: :destroy&lt;/code&gt;.  This means that when a &lt;code&gt;DataUpload&lt;/code&gt; record
gets deleted/destroyed, all of the associated &lt;code&gt;DataSet&lt;/code&gt; records will be
destroyed as well.&lt;/p&gt;
&lt;p&gt;This also loads every associated &lt;code&gt;DataSet&lt;/code&gt; model instance into memory as well.
This will bog down the server if there is a very large association of thousands
of &lt;code&gt;DataSet&lt;/code&gt; records.&lt;/p&gt;
&lt;p&gt;The way we solve this is to use the &lt;code&gt;ActiveRecord::Relation#delete_all&lt;/code&gt;. This
&lt;a href=&#34;https://apidock.com/rails/ActiveRecord/Relation/delete_all&#34;&gt;method&lt;/a&gt; performs a
single SQL statement and efficiently deletes all of the records within the
Relation.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Look at the example below.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;upload &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; DataUpload&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;last
data_sets &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; upload&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;data_sets

data_sets&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;delete_all&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;h3 id=&#34;warning&#34;&gt;WARNING&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DO NOT&lt;/strong&gt; use this method on more then 5,000 records in a Database table.  It will lock the Database for the entire transaction.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#delete_all&lt;/code&gt; does not load the record, so any callbacks will not be fired.  Make sure the application and/or model is not dependent on any pre/post delete processes.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now we can implement the method in the in the &lt;code&gt;DataUpload&lt;/code&gt; callback.&lt;/p&gt;
&lt;h4 class=&#34;snippet-heading&#34; id=&#34;appmodelsdata_uploadrb--1&#34;&gt;app/models/data_upload.rb&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;DataUpload&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt; ApplicationRecord
  has_many &lt;span style=&#34;color:#f1fa8c&#34;&gt;:data_sets&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;dependent&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;:delete_all&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;BUT WAIT!!&lt;/strong&gt; If you were a good reader and saw the first WARNING above you
will notice that if I left the code this way and a particular &lt;code&gt;DataUpload&lt;/code&gt;
instance had an association of more then 5,000 &lt;code&gt;DataSet&lt;/code&gt; records&amp;hellip; the
Database will lock for the entire transaction. To prevent from this we must
utilize one of the Ruby on Rails 5.0
&lt;a href=&#34;http://api.rubyonrails.org/classes/ActiveRecord/Batches.html#method-i-in_batches&#34;&gt;methods&lt;/a&gt;
&lt;code&gt;#in_batches&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;If you are not use a Rails version that is &amp;gt;= 5.0 then check out the gem &lt;a href=&#34;https://github.com/ankane/delete_in_batches&#34;&gt;delete_in_batches&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h4 class=&#34;snippet-heading&#34; id=&#34;appmodelsdata_uploadrb--2&#34;&gt;app/models/data_upload.rb&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;DataUpload&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt; ApplicationRecord
  has_many &lt;span style=&#34;color:#f1fa8c&#34;&gt;:data_sets&lt;/span&gt;

  before_destroy &lt;span style=&#34;color:#f1fa8c&#34;&gt;:destroy_data_sets&lt;/span&gt;

  &lt;span style=&#34;color:#ff79c6&#34;&gt;private&lt;/span&gt;

  &lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;destroy_data_sets&lt;/span&gt;
    data_sets&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;in_batches(&lt;span style=&#34;color:#f1fa8c&#34;&gt;of&lt;/span&gt;: &lt;span style=&#34;color:#bd93f9&#34;&gt;1000&lt;/span&gt;)&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;delete_all
  &lt;span style=&#34;color:#ff79c6&#34;&gt;end&lt;/span&gt;
&lt;span style=&#34;color:#ff79c6&#34;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;First we remove the previous callback &lt;code&gt;dependent: :delete_all&lt;/code&gt;, and replace it
with &lt;code&gt;before_destroy&lt;/code&gt; callback and pass in the new private method
&lt;code&gt;#destroy_data_sets&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You will notice that &lt;code&gt;#in_batches&lt;/code&gt; takes an option &lt;code&gt;:of&lt;/code&gt; set to &lt;code&gt;1000&lt;/code&gt;. This
will limit the amount of records deleted in a single SQL transaction to 1,000.
Thus preventing the Database from locking.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Chrome Driver For Headless Scraping and Downloading</title>
      <link>https://chrislabarge.com/posts/headless-scrape/</link>
      <pubDate>Fri, 20 Apr 2018 18:30:21 -0500</pubDate>
      
      <guid>https://chrislabarge.com/posts/headless-scrape/</guid>
      <description>&lt;h2 id=&#34;what-you-will-learn&#34;&gt;What You Will Learn&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;How to use a non headless web driver on a headless server.&lt;/li&gt;
&lt;li&gt;How to setup the Chrome Driver with Selenium and Capybara.&lt;/li&gt;
&lt;li&gt;How to set up the driver to allow for automatic browser downloads.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;who-this-is-for&#34;&gt;Who This Is For&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Ruby developers wanting to use the Chrome Driver for their browser automations.&lt;/li&gt;
&lt;li&gt;Coders looking for a solution to headless file downloads using the browser.&lt;/li&gt;
&lt;li&gt;Coders that need to run a non headless web driver in a headless environment.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;requirements&#34;&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Ruby&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/teamcapybara/capybara&#34;&gt; Capybara &lt;/a&gt; and &lt;a href=&#34;http://robotframework.org/SeleniumLibrary/&#34;&gt; Selenium &lt;/a&gt; installed.&lt;/li&gt;
&lt;li&gt;Framework(ex Rails) or program utilizing the above libraries.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;Recently I was making some scrapers for a client who needed pdf&amp;rsquo;s downloaded. The program runs on a AWS Ubuntu server and is developed with the Ruby language and the Capybara library. Because this is running in a headless environment I decided to go with Phantom JS as my web driver using Poltergeist gem to integrate it with Ruby and Capybara. I use this driver for integration testing when developing in Rails and have found it accomplished most of what I asked of it, without having to rely on the Selenium Library&lt;/p&gt;
&lt;p&gt;Most of the pdf&amp;rsquo;s I was scraping came from websites that would render them at URL  endpoints. This allowed me to just scrape the URL string with Phantom JS and use the Ruby module &lt;a href=&#34;https://ruby-doc.org/stdlib-2.4.3/libdoc/open-uri/rdoc/OpenURI.html&#34;&gt; open-uri &lt;/a&gt; to handle the downloading of the actual pdf document.&lt;/p&gt;
&lt;p&gt;Well unfortunetly I ran into a situation where the website would only let the user download the pdf as a file-attachment.  You cannot download files from the browser using Phantom JS.  This makes sense considering the whole point of Phantom JS is that it is truley headless driver.&lt;/p&gt;
&lt;p&gt;I would have to bring in &lt;a href=&#34;http://robotframework.org/SeleniumLibrary/&#34;&gt; Selenium &lt;/a&gt; after all.  Selenium is the end all be all of  automated browser interaction libraries. You can utilize several different web drivers with it, and integrate it with Capybara.  This allowed me to use Selenium in replace of Poltergiest without having to change any of my code.&lt;/p&gt;
&lt;p&gt;I decided to go with the &lt;a href=&#34;https://sites.google.com/a/chromium.org/chromedriver/&#34;&gt; Chrome Driver &lt;/a&gt; because I when I was researching how I could download the pdf&amp;rsquo;s using a headless driver someone suggested that the Chrome Driver had a new headless feature that would allow for downloading.(nope!)&lt;/p&gt;
&lt;p&gt;I plugged it in and started running the headless feature as I would Phantom JS. I actually really enjoyed the speed and performance of the driver.  I might start using it as my integration driver from now on.  Unfortunetly, it would not allow for downloads using the browser while using headless mode.(at least at this point)&lt;/p&gt;
&lt;p&gt;However, I was able to download the file using the non-headless mode of the Chrome Driver.&lt;/p&gt;
&lt;h2 id=&#34;code&#34;&gt;Code&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;The following is for installing the driver on Ubuntu&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Make sure Chrome is installed. &lt;a href=&#34;https://askubuntu.com/questions/510056/how-to-install-google-chrome&#34;&gt; Install Options &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Download and extract the Chrome Driver from the &lt;a href=&#34;https://sites.google.com/a/chromium.org/chromedriver/downloads&#34;&gt; Download Link &lt;/a&gt;. Then move the extracted binary driver file to &amp;ldquo;/usr/local/bin&amp;rdquo;&lt;/p&gt;
&lt;p&gt;There are some preferences and arguments you have to send/set in the Chrome Driver to be able to download files from the browser.
These will allow the browser to immediately download the file without having to accept the save_as prompt that ususally pops up.  You will also have to tell the driver what folder you would like the files to be downloaded to.&lt;/p&gt;
&lt;h4 class=&#34;snippet-heading&#34; id=&#34;config-or-initializer-file&#34;&gt;config or initializer file&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;driver_options&lt;/span&gt;
  download_directory &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;./downloads/&amp;#39;&lt;/span&gt;

  { &lt;span style=&#34;color:#f1fa8c&#34;&gt;args&lt;/span&gt;: &lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;test-type&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;disable-extensions&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt;,
    &lt;span style=&#34;color:#f1fa8c&#34;&gt;prefs&lt;/span&gt;: {
      &lt;span style=&#34;color:#f1fa8c&#34;&gt;plugins&lt;/span&gt;: { &lt;span style=&#34;color:#f1fa8c&#34;&gt;always_open_pdf_externally&lt;/span&gt;: &lt;span style=&#34;color:#ff79c6&#34;&gt;true&lt;/span&gt; },
      &lt;span style=&#34;color:#f1fa8c&#34;&gt;savefile&lt;/span&gt;: { &lt;span style=&#34;color:#f1fa8c&#34;&gt;default_directory&lt;/span&gt;: download_directory },
      &lt;span style=&#34;color:#f1fa8c&#34;&gt;download&lt;/span&gt;: { &lt;span style=&#34;color:#f1fa8c&#34;&gt;prompt_for_download&lt;/span&gt;: &lt;span style=&#34;color:#ff79c6&#34;&gt;false&lt;/span&gt;,
                  &lt;span style=&#34;color:#f1fa8c&#34;&gt;default_directory&lt;/span&gt;: download_directory }
    }
  }
&lt;span style=&#34;color:#ff79c6&#34;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Above I have wrapped the options within a ruby function.  I will call this function when passing the parameter option [:chromeOptions] to the #chrome method for  Remote::Capabilities. This takes place below when registering the driver with Capybara.&lt;/p&gt;
&lt;h4 class=&#34;snippet-heading&#34; id=&#34;config-or-initializer-file-1&#34;&gt;config or initializer file&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;Capybara&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;register_driver &lt;span style=&#34;color:#f1fa8c&#34;&gt;:chrome&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;|&lt;/span&gt;app&lt;span style=&#34;color:#ff79c6&#34;&gt;|&lt;/span&gt;
  capabilities &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; Selenium&lt;span style=&#34;color:#ff79c6&#34;&gt;::&lt;/span&gt;WebDriver&lt;span style=&#34;color:#ff79c6&#34;&gt;::&lt;/span&gt;Remote&lt;span style=&#34;color:#ff79c6&#34;&gt;::&lt;/span&gt;
    Capabilities&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;chrome(
      &lt;span style=&#34;color:#f1fa8c&#34;&gt;chromeOptions&lt;/span&gt;: driver_options
    )

  Capybara&lt;span style=&#34;color:#ff79c6&#34;&gt;::&lt;/span&gt;Selenium&lt;span style=&#34;color:#ff79c6&#34;&gt;::&lt;/span&gt;Driver&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;new(
    app,
    &lt;span style=&#34;color:#f1fa8c&#34;&gt;browser&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;:chrome&lt;/span&gt;,
    &lt;span style=&#34;color:#f1fa8c&#34;&gt;desired_capabilities&lt;/span&gt;: capabilities
  )
&lt;span style=&#34;color:#ff79c6&#34;&gt;end&lt;/span&gt;

Capybara&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;ignore_hidden_elements &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The hash from the function #driver_options() gets parsed by the Selenium Library and then passed to the chrome driver.&lt;/p&gt;
&lt;p&gt;If you want to see a complete list of options that you can pass to the chrome driver check out this &lt;a href=&#34;https://stackoverflow.com/questions/38335671/selenium-chrome-where-can-i-find-a-list-of-all-available-chromeoption-arguments&#34;&gt;stacked overflow response&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now when I  run the scraper locally using &amp;hellip;&lt;/p&gt;
&lt;h4 class=&#34;snippet-heading&#34; id=&#34;command-line&#34;&gt;Command Line&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;bundle &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;exec&lt;/span&gt; rake scrape_pdfs&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The chrome browser window pops up and runs through the list of the Capybara session commands, navigating to the download link, and then clicking the link.  This is where the driver options come to play and automatically save the file to the proper directory.&lt;/p&gt;
&lt;p&gt;Great!  But I need this same thing to happen on the AWS with no monitor. What am I to do?&lt;/p&gt;
&lt;p&gt;Well that is where  Xvfb comes it.  It creates a virtual monitor and allows you to use non headless web drivers in headless environments.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://tobyho.com/2015/01/09/headless-browser-testing-xvfb/&#34;&gt;Xvfb Tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As long as Xvfb is properly installed all you need to do is pass the command that kicks off your Capybara Session to the &amp;ldquo;xvfb-run&amp;rdquo; command.&lt;/p&gt;
&lt;h4 class=&#34;snippet-heading&#34; id=&#34;command-line-1&#34;&gt;Command Line&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;xvfb-run bundle &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;exec&lt;/span&gt; rake scrape_pdfs&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I can no longer watch the scrape occur on my monitor, but after the program is done running, I can verify it worked by finding a freshly downloaded pdf in my &amp;ldquo;./downloads&amp;rdquo; folder.&lt;/p&gt;
&lt;p&gt;And there you have it a simple way to run non headless Chrome Driver session in a headless server environment, in order to download files using the browser.&lt;/p&gt;
&lt;h2 id=&#34;notes&#34;&gt;Notes&lt;/h2&gt;
&lt;p&gt;The default screen size for the &amp;ldquo;xfvb-run&amp;rdquo; command is fairly small.  So if you are interacting with a responsive website and need you change the virtual screen dimensions run the command like so&amp;hellip;&lt;/p&gt;
&lt;h4 class=&#34;snippet-heading&#34; id=&#34;command-line-2&#34;&gt;Command Line&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;xvfb-run --server-args&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;-screen 0 1024x768x24&amp;#39;&lt;/span&gt; bundle &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;exec&lt;/span&gt; rake scrape_pdfs&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
